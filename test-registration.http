### Test Candidate Registration API

# Test successful registration
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "first_name": "John",
  "last_name": "Doe",
  "nic": "123456789V",
  "passport": "A12345678",
  "gender": "male",
  "date_of_birth": "1990-01-01",
  "address": "123 Main Street, Colombo 01, Sri Lanka",
  "phone": "+94771234567",
  "email": "john.doe@example.com",
  "password": "securepassword123",
  "confirm_password": "securepassword123"
}

###

# Test registration with different NIC (to test membership number generation)
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "first_name": "Jane",
  "last_name": "Smith",
  "nic": "987654321V",
  "gender": "female",
  "date_of_birth": "1995-05-15",
  "address": "456 Oak Avenue, Kandy, Sri Lanka",
  "phone": "+94779876543",
  "email": "jane.smith@example.com",
  "password": "securepassword123",
  "confirm_password": "securepassword123"
}

###

# Test validation error - missing required fields
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "first_name": "Jane",
  "email": "jane.doe@example.com",
  "password": "password123"
}

###

# Test validation error - password mismatch
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "first_name": "Jane",
  "last_name": "Doe",
  "nic": "987654321V",
  "gender": "female",
  "date_of_birth": "1995-05-15",
  "address": "456 Oak Avenue, Kandy, Sri Lanka",
  "phone": "+94779876543",
  "email": "jane.doe@example.com",
  "password": "securepassword123",
  "confirm_password": "differentpassword"
}

###

# Test validation error - invalid email format
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "first_name": "Bob",
  "last_name": "Smith",
  "nic": "555666777V",
  "gender": "other",
  "date_of_birth": "1985-12-25",
  "address": "789 Pine Road, Galle, Sri Lanka",
  "phone": "+94775554444",
  "email": "invalid-email-format",
  "password": "securepassword123",
  "confirm_password": "securepassword123"
}

###

# Test validation error - password too short
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "first_name": "Alice",
  "last_name": "Johnson",
  "nic": "111222333V",
  "gender": "prefer_not_to_say",
  "date_of_birth": "2000-08-10",
  "address": "321 Elm Street, Jaffna, Sri Lanka",
  "phone": "+94771112222",
  "email": "alice.johnson@example.com",
  "password": "123",
  "confirm_password": "123"
}

###

# Test User Login API (for both candidates and employers)

# Test successful candidate login
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "securepassword123"
}

###

# Test successful employer login
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "employer@company.com",
  "password": "employerpassword123"
}

###

# Test login validation error - missing email
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "password": "securepassword123"
}

###

# Test login validation error - missing password
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "john.doe@example.com"
}

###

# Test login validation error - invalid email format
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "invalid-email-format",
  "password": "securepassword123"
}

###

# Test login with non-existent user
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "nonexistent@example.com",
  "password": "somepassword123"
}

###

# Test Email Verification API

# Test send verification email
POST http://localhost:3000/api/auth/send-verification
Content-Type: application/json

{
  "email": "john.doe@example.com"
}

###

# Test send verification email - invalid email format
POST http://localhost:3000/api/auth/send-verification
Content-Type: application/json

{
  "email": "invalid-email-format"
}

###

# Test send verification email - non-existent user
POST http://localhost:3000/api/auth/send-verification
Content-Type: application/json

{
  "email": "nonexistent@example.com"
}

###

# Test Email Code Verification API

# Test verify email code
POST http://localhost:3000/api/auth/verify-email
Content-Type: application/json

{
  "token": "123456"
}

###

# Test verify email code - invalid code
POST http://localhost:3000/api/auth/verify-email
Content-Type: application/json

{
  "token": "000000"
}

###

# Test verify email code - missing code
POST http://localhost:3000/api/auth/verify-email
Content-Type: application/json

{}

###

# Test User Login API

# Test login with valid credentials
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "securepassword123"
}

###

# Test login with invalid email
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "invalid@example.com",
  "password": "securepassword123"
}

###

# Test login with invalid password
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "wrongpassword"
}

###

# Test JWT Authentication APIs

# Test refresh token
POST http://localhost:3000/api/auth/refresh-token
Content-Type: application/json

{
  "refresh_token": "your_refresh_token_here"
}

###

# Test logout
POST http://localhost:3000/api/auth/logout
Content-Type: application/json

{}

###

# Test get profile (requires authentication)
GET http://localhost:3000/api/auth/profile
Content-Type: application/json

###

# Test candidate dashboard (requires authentication)
GET http://localhost:3000/api/candidate/dashboard
Content-Type: application/json

###

# Test candidate list (requires admin authentication - MIS or recruitment agency)
GET http://localhost:3000/api/candidate/list
Content-Type: application/json
